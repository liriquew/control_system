version: '3.8'

services:
  go-api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=passw0rd
      - POSTGRES_DB=control_system
    depends_on:
      postgres:
        condition: service_healthy
      python-server:
        condition: service_healthy
    networks:
      - app-network

  python-server:
    build:
      context: ./predictions_service
      dockerfile: Dockerfile
    ports:
      - "4041:4041"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=passw0rd
      - POSTGRES_DB=control_system
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  postgres:
    image: postgres
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: passw0rd
      POSTGRES_DB: control_system
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: somemail@example.com
      PGADMIN_DEFAULT_PASSWORD: passw0rd
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  migrate:
    image: migrate/migrate
    container_name: migrate
    entrypoint: [ 
      "sh", "-c", 
      "migrate -path migrations -database \"postgresql://postgres:passw0rd@postgres:5432/control_system?sslmode=disable\" -verbose up"
    ]
    volumes:
      - ./migrations:/migrations
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
